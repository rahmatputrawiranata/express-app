{"D:\\work\\express-api\\src\\module\\api\\controller\\user.ts":{"path":"D:\\work\\express-api\\src\\module\\api\\controller\\user.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":12,"column":0},"end":{"line":12,"column":89}},"14":{"start":{"line":13,"column":17},"end":{"line":13,"column":42}},"15":{"start":{"line":14,"column":15},"end":{"line":14,"column":42}},"16":{"start":{"line":15,"column":12},"end":{"line":47,"column":2}},"17":{"start":{"line":15,"column":26},"end":{"line":47,"column":2}},"18":{"start":{"line":16,"column":18},"end":{"line":16,"column":27}},"19":{"start":{"line":17,"column":17},"end":{"line":17,"column":113}},"20":{"start":{"line":18,"column":18},"end":{"line":18,"column":116}},"21":{"start":{"line":19,"column":17},"end":{"line":19,"column":22}},"22":{"start":{"line":20,"column":17},"end":{"line":20,"column":34}},"23":{"start":{"line":21,"column":18},"end":{"line":21,"column":20}},"24":{"start":{"line":22,"column":4},"end":{"line":28,"column":5}},"25":{"start":{"line":23,"column":24},"end":{"line":23,"column":44}},"26":{"start":{"line":24,"column":24},"end":{"line":24,"column":128}},"27":{"start":{"line":25,"column":8},"end":{"line":27,"column":10}},"28":{"start":{"line":26,"column":36},"end":{"line":26,"column":43}},"29":{"start":{"line":29,"column":31},"end":{"line":38,"column":6}},"30":{"start":{"line":39,"column":4},"end":{"line":46,"column":7}},"31":{"start":{"line":48,"column":0},"end":{"line":48,"column":18}},"32":{"start":{"line":49,"column":15},"end":{"line":69,"column":2}},"33":{"start":{"line":49,"column":29},"end":{"line":69,"column":2}},"34":{"start":{"line":50,"column":18},"end":{"line":50,"column":28}},"35":{"start":{"line":51,"column":15},"end":{"line":51,"column":31}},"36":{"start":{"line":52,"column":4},"end":{"line":58,"column":5}},"37":{"start":{"line":53,"column":8},"end":{"line":57,"column":11}},"38":{"start":{"line":59,"column":17},"end":{"line":63,"column":6}},"39":{"start":{"line":64,"column":4},"end":{"line":68,"column":7}},"40":{"start":{"line":70,"column":0},"end":{"line":70,"column":24}},"41":{"start":{"line":71,"column":14},"end":{"line":84,"column":2}},"42":{"start":{"line":71,"column":28},"end":{"line":84,"column":2}},"43":{"start":{"line":72,"column":18},"end":{"line":72,"column":26}},"44":{"start":{"line":73,"column":17},"end":{"line":78,"column":6}},"45":{"start":{"line":79,"column":4},"end":{"line":83,"column":7}},"46":{"start":{"line":85,"column":0},"end":{"line":85,"column":22}},"47":{"start":{"line":86,"column":15},"end":{"line":114,"column":2}},"48":{"start":{"line":86,"column":29},"end":{"line":114,"column":2}},"49":{"start":{"line":87,"column":18},"end":{"line":87,"column":26}},"50":{"start":{"line":88,"column":25},"end":{"line":92,"column":6}},"51":{"start":{"line":93,"column":4},"end":{"line":99,"column":5}},"52":{"start":{"line":94,"column":8},"end":{"line":98,"column":11}},"53":{"start":{"line":100,"column":17},"end":{"line":108,"column":6}},"54":{"start":{"line":109,"column":4},"end":{"line":113,"column":7}},"55":{"start":{"line":115,"column":0},"end":{"line":115,"column":24}},"56":{"start":{"line":116,"column":16},"end":{"line":140,"column":2}},"57":{"start":{"line":116,"column":30},"end":{"line":140,"column":2}},"58":{"start":{"line":117,"column":18},"end":{"line":117,"column":26}},"59":{"start":{"line":118,"column":25},"end":{"line":122,"column":6}},"60":{"start":{"line":123,"column":4},"end":{"line":129,"column":5}},"61":{"start":{"line":124,"column":8},"end":{"line":128,"column":11}},"62":{"start":{"line":130,"column":4},"end":{"line":134,"column":7}},"63":{"start":{"line":135,"column":4},"end":{"line":139,"column":7}},"64":{"start":{"line":141,"column":0},"end":{"line":141,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":15,"column":12},"end":{"line":15,"column":13}},"loc":{"start":{"line":15,"column":26},"end":{"line":47,"column":2}},"line":15},"8":{"name":"(anonymous_8)","decl":{"start":{"line":15,"column":60},"end":{"line":15,"column":61}},"loc":{"start":{"line":15,"column":73},"end":{"line":47,"column":1}},"line":15},"9":{"name":"(anonymous_9)","decl":{"start":{"line":26,"column":28},"end":{"line":26,"column":29}},"loc":{"start":{"line":26,"column":36},"end":{"line":26,"column":43}},"line":26},"10":{"name":"(anonymous_10)","decl":{"start":{"line":49,"column":15},"end":{"line":49,"column":16}},"loc":{"start":{"line":49,"column":29},"end":{"line":69,"column":2}},"line":49},"11":{"name":"(anonymous_11)","decl":{"start":{"line":49,"column":63},"end":{"line":49,"column":64}},"loc":{"start":{"line":49,"column":76},"end":{"line":69,"column":1}},"line":49},"12":{"name":"(anonymous_12)","decl":{"start":{"line":71,"column":14},"end":{"line":71,"column":15}},"loc":{"start":{"line":71,"column":28},"end":{"line":84,"column":2}},"line":71},"13":{"name":"(anonymous_13)","decl":{"start":{"line":71,"column":62},"end":{"line":71,"column":63}},"loc":{"start":{"line":71,"column":75},"end":{"line":84,"column":1}},"line":71},"14":{"name":"(anonymous_14)","decl":{"start":{"line":86,"column":15},"end":{"line":86,"column":16}},"loc":{"start":{"line":86,"column":29},"end":{"line":114,"column":2}},"line":86},"15":{"name":"(anonymous_15)","decl":{"start":{"line":86,"column":63},"end":{"line":86,"column":64}},"loc":{"start":{"line":86,"column":76},"end":{"line":114,"column":1}},"line":86},"16":{"name":"(anonymous_16)","decl":{"start":{"line":116,"column":16},"end":{"line":116,"column":17}},"loc":{"start":{"line":116,"column":30},"end":{"line":140,"column":2}},"line":116},"17":{"name":"(anonymous_17)","decl":{"start":{"line":116,"column":64},"end":{"line":116,"column":65}},"loc":{"start":{"line":116,"column":77},"end":{"line":140,"column":1}},"line":116}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":17,"column":17},"end":{"line":17,"column":113}},"type":"cond-expr","locations":[{"start":{"line":17,"column":91},"end":{"line":17,"column":92}},{"start":{"line":17,"column":95},"end":{"line":17,"column":113}}],"line":17},"6":{"loc":{"start":{"line":17,"column":30},"end":{"line":17,"column":86}},"type":"cond-expr","locations":[{"start":{"line":17,"column":67},"end":{"line":17,"column":73}},{"start":{"line":17,"column":76},"end":{"line":17,"column":86}}],"line":17},"7":{"loc":{"start":{"line":17,"column":30},"end":{"line":17,"column":64}},"type":"binary-expr","locations":[{"start":{"line":17,"column":30},"end":{"line":17,"column":44}},{"start":{"line":17,"column":48},"end":{"line":17,"column":64}}],"line":17},"8":{"loc":{"start":{"line":18,"column":18},"end":{"line":18,"column":116}},"type":"cond-expr","locations":[{"start":{"line":18,"column":92},"end":{"line":18,"column":94}},{"start":{"line":18,"column":97},"end":{"line":18,"column":116}}],"line":18},"9":{"loc":{"start":{"line":18,"column":31},"end":{"line":18,"column":87}},"type":"cond-expr","locations":[{"start":{"line":18,"column":68},"end":{"line":18,"column":74}},{"start":{"line":18,"column":77},"end":{"line":18,"column":87}}],"line":18},"10":{"loc":{"start":{"line":18,"column":31},"end":{"line":18,"column":65}},"type":"binary-expr","locations":[{"start":{"line":18,"column":31},"end":{"line":18,"column":45}},{"start":{"line":18,"column":49},"end":{"line":18,"column":65}}],"line":18},"11":{"loc":{"start":{"line":22,"column":4},"end":{"line":28,"column":5}},"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":28,"column":5}},{"start":{"line":22,"column":4},"end":{"line":28,"column":5}}],"line":22},"12":{"loc":{"start":{"line":22,"column":8},"end":{"line":22,"column":67}},"type":"cond-expr","locations":[{"start":{"line":22,"column":45},"end":{"line":22,"column":51}},{"start":{"line":22,"column":54},"end":{"line":22,"column":67}}],"line":22},"13":{"loc":{"start":{"line":22,"column":8},"end":{"line":22,"column":42}},"type":"binary-expr","locations":[{"start":{"line":22,"column":8},"end":{"line":22,"column":22}},{"start":{"line":22,"column":26},"end":{"line":22,"column":42}}],"line":22},"14":{"loc":{"start":{"line":52,"column":4},"end":{"line":58,"column":5}},"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":58,"column":5}},{"start":{"line":52,"column":4},"end":{"line":58,"column":5}}],"line":52},"15":{"loc":{"start":{"line":93,"column":4},"end":{"line":99,"column":5}},"type":"if","locations":[{"start":{"line":93,"column":4},"end":{"line":99,"column":5}},{"start":{"line":93,"column":4},"end":{"line":99,"column":5}}],"line":93},"16":{"loc":{"start":{"line":123,"column":4},"end":{"line":129,"column":5}},"type":"if","locations":[{"start":{"line":123,"column":4},"end":{"line":129,"column":5}},{"start":{"line":123,"column":4},"end":{"line":129,"column":5}}],"line":123}},"s":{"0":1,"1":11,"2":9,"3":9,"4":11,"5":11,"6":0,"7":0,"8":0,"9":0,"10":20,"11":9,"12":1,"13":1,"14":1,"15":1,"16":1,"17":2,"18":2,"19":2,"20":2,"21":2,"22":2,"23":2,"24":2,"25":1,"26":1,"27":1,"28":1,"29":2,"30":2,"31":1,"32":1,"33":2,"34":2,"35":2,"36":2,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":2,"49":2,"50":2,"51":2,"52":1,"53":1,"54":1,"55":1,"56":1,"57":2,"58":2,"59":2,"60":2,"61":1,"62":1,"63":1,"64":1},"f":{"0":9,"1":11,"2":9,"3":9,"4":11,"5":0,"6":20,"7":2,"8":2,"9":1,"10":2,"11":2,"12":1,"13":1,"14":2,"15":2,"16":2,"17":2},"b":{"0":[1,1,1],"1":[2,9],"2":[9,9],"3":[9,11],"4":[9,9],"5":[1,1],"6":[1,1],"7":[2,2],"8":[1,1],"9":[1,1],"10":[2,2],"11":[1,1],"12":[1,1],"13":[2,2],"14":[1,1],"15":[1,1],"16":[1,1]},"inputSourceMap":{"version":3,"file":"D:/work/express-api/src/module/api/controller/user.ts","sources":["D:/work/express-api/src/module/api/controller/user.ts"],"names":[],"mappings":"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","sourcesContent":["import { PrismaClient, User } from '@prisma/client'\r\nimport { Response, Request, NextFunction } from \"express\";\r\nconst prisma = new PrismaClient()\r\n\r\nconst all = async(req: Request, res: Response) => {\r\n    const query = req.query\r\n    const page: number  = isNaN(Number(query?.page)) ? 1 : Number(query.page)\r\n    const limit: number = isNaN(Number(query?.page)) ? 10 : Number(query.limit)\r\n    const take = limit\r\n    const skip = (page - 1) * take\r\n    \r\n    const where: {\r\n        id?: {\r\n            in: number[]\r\n        }\r\n    } = {}\r\n    \r\n    if(query?.keyword) {\r\n        const keyword = `%${query.keyword}%`\r\n        const userIds: User[] = await prisma.$queryRaw`SELECT id FROM user WHERE CONCAT_WS(' ', first_name, last_name) LIKE ${keyword}`\r\n        where.id = {\r\n            in: userIds.map(item => item.id)\r\n        }\r\n    }\r\n\r\n    const [users, totalItem] = await Promise.all([\r\n        prisma.user.findMany({\r\n            where,\r\n            take,\r\n            skip\r\n        }),\r\n        prisma.user.count({\r\n            where\r\n        })\r\n    ]);\r\n    return res.status(200).json({\r\n        status: true,\r\n        message: \"success\",\r\n        resp_data: {\r\n            total_item: totalItem,\r\n            data: users\r\n        }\r\n    })\r\n}\r\n\r\nconst detail = async(req: Request, res: Response) => {\r\n    \r\n    const param = req.params\r\n    const id: number = Number(param.id)\r\n    if(isNaN(id)){\r\n        return res.status(400).json({\r\n            status: false,\r\n            message: \"invalid user id\",\r\n            resp_data: null\r\n        });\r\n    }\r\n    const user = await prisma.user.findFirst({\r\n        where: {\r\n            id: id\r\n        }\r\n    })\r\n\r\n    return res.status(200).json({\r\n        status: true,\r\n        message: 'success',\r\n        resp_data: user\r\n    })\r\n}\r\n\r\nconst store = async(req: Request, res: Response) => {\r\n    const input = req.body\r\n\r\n    const user = await prisma.user.create({\r\n        data: {\r\n            first_name: input.first_name,\r\n            last_name: input.last_name\r\n        }\r\n    })\r\n\r\n    return res.status(200).json({\r\n        status: true,\r\n        message: 'success',\r\n        resp_data: user\r\n    })\r\n}\r\n\r\nconst update = async(req: Request, res: Response) => {\r\n    const input = req.body\r\n\r\n    const isUserExists = await prisma.user.findFirst({\r\n        where: {\r\n            id: input.id\r\n        }\r\n    })\r\n\r\n    if(!isUserExists) {\r\n        return res.status(400).json({\r\n            status: false,\r\n            message: 'user not found',\r\n            resp_data: null\r\n        })\r\n    }\r\n\r\n    const user = await prisma.user.update({\r\n        where: {\r\n            id: input.id\r\n        },\r\n        data: {\r\n            first_name: input.first_name,\r\n            last_name: input.last_name\r\n        }\r\n    })\r\n\r\n    return res.status(200).json({\r\n        status: true,\r\n        message: 'success',\r\n        resp_data: user\r\n    })\r\n}\r\n\r\nconst destroy = async(req: Request, res: Response) => {\r\n    const input = req.body\r\n\r\n    const isUserExists = await prisma.user.findFirst({\r\n        where: {\r\n            id: input.id\r\n        }\r\n    })\r\n\r\n    if(!isUserExists) {\r\n        return res.status(400).json({\r\n            status: false,\r\n            message: 'user not found',\r\n            resp_data: null\r\n        })\r\n    }\r\n\r\n    await prisma.user.delete({\r\n        where: {\r\n            id: input.id\r\n        }\r\n    })\r\n\r\n    return res.status(200).json({\r\n        status: true,\r\n        message: 'success delete users',\r\n        resp_data: null\r\n    })\r\n}\r\n\r\nexport {\r\n    all,\r\n    detail,\r\n    store,\r\n    update,\r\n    destroy\r\n};"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0e703a945cd1cffab30e5f5803031ef905973dd2"}}